
@article{brisson_stics_1998,
	title = {{STICS}: a generic model for the simulation of crops and their water and nitrogen balances. {I}. {Theory} and parameterization applied to wheat and corn},
	volume = {18},
	shorttitle = {{STICS}},
	url = {https://hal.inrae.fr/hal-02698682},
	number = {5-6},
	urldate = {2021-06-20},
	journal = {Agronomie},
	author = {Brisson, Nadine and Mary, Bruno and Ripoche, Dominique and Jeuffroy, Marie-Helene and Ruget, Francoise and Nicoullaud, Bernard B. and Gate, Philippe and Devienne-Barret, F. and Antonioletti, R. and Dürr, Carolyne and Richard, Guy and Beaudoin, Nicolas and Recous, Sylvie and Tayot, X. and Plenet, Daniel and Cellier, Pierre and Machet, J.M. and Meynard, Jean Marc J. M. and Delecolle, R.},
	year = {1998},
	note = {Number: 5-6
Publisher: EDP Sciences},
	keywords = {BILAN AZOTE, RELATION PLANTE SOL},
	pages = {311--346},
	file = {Brisson et al_1998_STICS.pdf:/Users/vezy/Zotero/storage/DEZFQW8J/Brisson et al_1998_STICS.pdf:application/pdf},
}

@article{pradal_openalea_2008,
	title = {{OpenAlea}: a visual programming and component-based software platform for plant modelling},
	volume = {35},
	url = {https://doi.org/10.1071/FP08084},
	abstract = {The development of functional–structural plant models requires an increasing amount of computer modelling. All these models are developed by different teams in various contexts and with different goals. Efficient and flexible computational frameworks are required to augment the interaction between these models, their reusability, and the possibility to compare them on identical datasets. In this paper, we present an open-source platform, OpenAlea, that provides a user-friendly environment for modellers, and advanced deployment methods. OpenAlea allows researchers to build models using a visual programming interface and provides a set of tools and models dedicated to plant modelling. Models and algorithms are embedded in OpenAlea ‘components’ with well defined input and output interfaces that can be easily interconnected to form more complex models and define more macroscopic components. The system architecture is based on the use of a general purpose, high-level, object-oriented script language, Python, widely used in other scientific areas. We present a brief rationale that underlies the architectural design of this system and we illustrate the use of the platform to assemble several heterogeneous model components and to rapidly prototype a complex modelling scenario.},
	number = {10},
	journal = {Functional Plant Biology},
	author = {Pradal, Christophe and Dufour-Kowalski, Samuel and Boudon, Frédéric and Fournier, Christian and Godin, Christophe},
	year = {2008},
	keywords = {light interception, dataflow, interactive modelling, plant modeling, software architecture.},
	pages = {751--760},
}

@article{brown_plant_2014,
	title = {Plant {Modelling} {Framework}: {Software} for building and running crop models on the {APSIM} platform},
	volume = {62},
	issn = {1364-8152},
	shorttitle = {Plant {Modelling} {Framework}},
	url = {https://www.sciencedirect.com/science/article/pii/S1364815214002588},
	doi = {10.1016/j.envsoft.2014.09.005},
	abstract = {The Plant Modelling Framework (PMF) is a software framework for creating models that represent the plant components of farm system models in the agricultural production system simulator (APSIM). It is the next step in the evolution of generic crop templates for APSIM, building on software and science lessons from past versions and capitalising on new software approaches. The PMF contains a top-level Plant class that provides an interface with the APSIM model environment and controls the other classes in the plant model. Other classes include mid-level Organ, Phenology, Structure and Arbitrator classes that represent specific elements or processes of the crop and sub-classes that the mid-level classes use to represent repeated data structures. It also contains low-level Function classes which represent generic mathematical, logical, procedural or reference code and provide values to the processes carried out by mid-level classes. A plant configuration file specifies which mid-level and Function classes are to be included and how they are to be arranged and parameterised to represent a particular crop model. The PMF has an integrated design environment to allow plant models to be created visually. The aims of the PMF are to maximise code reuse and allow flexibility in the structure of models. Four examples are included to demonstrate the flexibility of application of the PMF; 1. Slurp, a simple model of the water use of a static crop, 2. Oat, an annual grain crop model with detailed growth, development and resource use processes, 3. Lucerne, perennial forage model with detailed growth, development and resource use processes, 4. Wheat, another detailed annual crop model constructed using an alternative set of organ and process classes. These examples show the PMF can be used to develop models of different complexities and allows flexibility in the approach for implementing crop physiology concepts into model set up.},
	language = {en},
	urldate = {2023-02-10},
	journal = {Environmental Modelling \& Software},
	author = {Brown, Hamish E. and Huth, Neil I. and Holzworth, Dean P. and Teixeira, Edmar I. and Zyskowski, Rob F. and Hargreaves, John N. G. and Moot, Derrick J.},
	month = dec,
	year = {2014},
	keywords = {Biomass and nitrogen partitioning, Canopy dynamics, Integrated design environment, Phenological and morphological development, Reusable organ and function classes},
	pages = {385--398},
	file = {ScienceDirect Full Text PDF:/Users/vezy/Zotero/storage/KM94IK8P/Brown et al. - 2014 - Plant Modelling Framework Software for building a.pdf:application/pdf},
}

@article{holzworth_apsim_2014,
	title = {{APSIM} – {Evolution} towards a new generation of agricultural systems simulation},
	volume = {62},
	issn = {1364-8152},
	url = {https://www.sciencedirect.com/science/article/pii/S1364815214002102},
	doi = {10.1016/j.envsoft.2014.07.009},
	abstract = {Agricultural systems models worldwide are increasingly being used to explore options and solutions for the food security, climate change adaptation and mitigation and carbon trading problem domains. APSIM (Agricultural Production Systems sIMulator) is one such model that continues to be applied and adapted to this challenging research agenda. From its inception twenty years ago, APSIM has evolved into a framework containing many of the key models required to explore changes in agricultural landscapes with capability ranging from simulation of gene expression through to multi-field farms and beyond. Keating et al. (2003) described many of the fundamental attributes of APSIM in detail. Much has changed in the last decade, and the APSIM community has been exploring novel scientific domains and utilising software developments in social media, web and mobile applications to provide simulation tools adapted to new demands. This paper updates the earlier work by Keating et al. (2003) and chronicles the changing external challenges and opportunities being placed on APSIM during the last decade. It also explores and discusses how APSIM has been evolving to a “next generation” framework with improved features and capabilities that allow its use in many diverse topics.},
	language = {en},
	urldate = {2023-02-10},
	journal = {Environmental Modelling \& Software},
	author = {Holzworth, Dean P. and Huth, Neil I. and deVoil, Peter G. and Zurcher, Eric J. and Herrmann, Neville I. and McLean, Greg and Chenu, Karine and van Oosterom, Erik J. and Snow, Val and Murphy, Chris and Moore, Andrew D. and Brown, Hamish and Whish, Jeremy P. M. and Verrall, Shaun and Fainges, Justin and Bell, Lindsay W. and Peake, Allan S. and Poulton, Perry L. and Hochman, Zvi and Thorburn, Peter J. and Gaydon, Donald S. and Dalgliesh, Neal P. and Rodriguez, Daniel and Cox, Howard and Chapman, Scott and Doherty, Alastair and Teixeira, Edmar and Sharp, Joanna and Cichota, Rogerio and Vogeler, Iris and Li, Frank Y. and Wang, Enli and Hammer, Graeme L. and Robertson, Michael J. and Dimes, John P. and Whitbread, Anthony M. and Hunt, James and van Rees, Harm and McClelland, Tim and Carberry, Peter S. and Hargreaves, John N. G. and MacLeod, Neil and McDonald, Cam and Harsdorf, Justin and Wedgwood, Sara and Keating, Brian A.},
	month = dec,
	year = {2014},
	keywords = {Agricultural systems, APSIM, Crop, Farming system, Gene-to-phenotype model, Model, Simulation},
	pages = {327--350},
	file = {ScienceDirect Snapshot:/Users/vezy/Zotero/storage/IHPDY4FF/S1364815214002102.html:text/html},
}

@article{jones_dssat_2003,
	title = {The {DSSAT} cropping system model},
	volume = {18},
	number = {3-4},
	journal = {European journal of agronomy},
	author = {Jones, James W and Hoogenboom, Gerrit and Porter, Cheryl H and Boote, Ken J and Batchelor, William D and Hunt, LA and Wilkens, Paul W and Singh, Upendra and Gijsman, Arjan J and Ritchie, Joe T},
	year = {2003},
	note = {Publisher: Elsevier},
	pages = {235--265},
}

@software{remi_vezy_2023_7620502,
  author       = {Rémi Vezy and
                  Simon Treillou},
  title        = {VEZY/PlantBiophysics.jl: v0.8.0},
  month        = feb,
  year         = 2023,
  publisher    = {Zenodo},
  version      = {v0.8.0},
  doi          = {10.5281/zenodo.7620502},
  url          = {https://doi.org/10.5281/zenodo.7620502}
}

@software{vezy_remi_2022_7529838,
  author       = {Vezy, Rémi},
  title        = {{MultiScaleTreeGraph.jl: Read, Write, Analyze, 
                   Compute and Plot Multi-scale Tree Graph Files}},
  month        = aug,
  year         = 2022,
  note         = {{To cite package "MultiScaleTreeGraph.jl" in 
                   publications, please use:}},
  publisher    = {Zenodo},
  version      = {v0.7.0},
  doi          = {10.5281/zenodo.7529838},
  url          = {https://doi.org/10.5281/zenodo.7529838}
}

@misc{Carlson,
  doi = {10.48550/ARXIV.2001.07625},
  
  url = {https://arxiv.org/abs/2001.07625},
  
  author = {Carlson, Fredrik Bagge},
  
  keywords = {Mathematical Software (cs.MS), Computation (stat.CO), Other Statistics (stat.OT), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {MonteCarloMeasurements.jl: Nonlinear Propagation of Arbitrary Multivariate Distributions by means of Method Overloading},
  
  publisher = {arXiv},
  
  year = {2020},
  
  copyright = {arXiv.org perpetual, non-exclusive license}
}